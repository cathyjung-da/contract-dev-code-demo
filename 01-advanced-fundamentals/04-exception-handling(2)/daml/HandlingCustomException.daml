module HandlingCustomException where

import Daml.Script
import DA.Exception
import DA.Action (when)

template SocialNetworkUser
    with
        username: Party
        following: [Party]
        alias: Text
    where
        signatory username
        observer following

        key username : Party 
        maintainer key 

        ensure alias /= ""

        choice Follow: ContractId SocialNetworkUser
            with
                userToFollow: Party
            controller username
            do       
                assertMsg "You cannot follow yourself" (userToFollow /= username)
                assertMsg "You cannot follow the same user twice" (notElem userToFollow following)
                create this with following = userToFollow :: following

        nonconsuming choice ChangeAlias: ContractId SocialNetworkUser
            with
                newAlias: Text
            controller username
            do
                try do
                    if (newAlias == "") then do 
                        throw ChangeFailed with 
                            fieldName = "alias"
                            details = "cannot be an empty string"
                    else do
                        archive self 
                        create this with alias = newAlias
                catch
                    (ChangeFailed f d) -> do
                        -- return self
                        trace (f <> " " <> d) (return self)

                    (e: ChangeFailed) -> do
                        debug e 
                        trace (e.fieldName <> " " <> e.details)(return self)
                        -- trace (message e) (return self)

                    (e: AnyException) -> do
                        trace (message e) (return self)


-- Custom Exception
exception ChangeFailed
    with
        fieldName: Text
        details: Text
    where
        message "Provided input is invalid."


test = script do
    alice <- allocateParty "Alice"
    bob <- allocateParty "Bob"

    aliceCid <- submit alice do
        createCmd SocialNetworkUser with
            username = alice
            following = []
            alias = "aliceAlias"
    
    submit alice do 
        exerciseCmd aliceCid ChangeAlias with newAlias = ""

